<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>To Do Application </title>
  <link rel="stylesheet" href="styles.css" />
</head>
<body>
<div class="container">
  <div class="todo-header">
    <h2>ToDo List</h2>
    <img src="https://static.vecteezy.com/system/resources/previews/046/265/815/non_2x/to-do-list-or-planning-icon-concept-all-tasks-are-completed-paper-sheets-with-check-marks-vector.jpg" height="50px" />
  </div>
  <div class="todo-body">
    <input
            type="text"
            id="todoText"
            class="todo-input"
            placeholder="Add your items"
    />
    <img
            src="https://th.bing.com/th/id/OIP.t_QJH2TUIPdT2aExyJEqJQHaHa?r=0&rs=1&pid=ImgDetMain&cb=idpwebpc2"
            alt="+"
            id="AddUpdateClick"
            onclick="CreateToDoItems();"
    />
  </div>
  <h5 id="Alert"></h5>
  <ul id="list-items" class="list-items"></ul>
</div>
<script type="text/javascript" src="script.js"></script>
</body>
</html>
-----------------
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap");
* {
    margin: 0;
    padding: 0;
    font-family: "Poppins", sans-serif;
    box-sizing: border-box;
}
body {
    background: #04629e;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
}

.container {
    background: #ffffff;
    padding: 25px;
    width: 550px;
    border-radius: 10px;
}
.todo-header {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
    padding-left: 5px;
    justify-content: center;
}
.todo-body {
    display: flex;
    align-items: center;
    justify-content: space-between;
    background: #edeef0;
    border-radius: 30px;
    padding-left: 20px;
    margin-bottom: 25px;
}

.todo-body input {
    flex: 1;
    border: none;
    outline: none;
    background: transparent;
    padding: 15px 0;
    font-size: 20px;
}

.todo-body img {
    cursor: pointer;
    border-radius: 40px;
    height: 55px;
    width: 55px;
    padding: 15px;
    background: limegreen;
}
ul li {
    list-style: none;
    font-size: 18px;
    cursor: pointer;
    padding: 10px;
}

li {
    display: flex;
    align-items: center;
    justify-content: space-between;
    background: #edeef0;
    margin-bottom: 10px;
    border-radius: 5px;
}

h5 {
    text-align: center;
    margin-bottom: 10px;
    color: green;
}

.todo-controls {
    width: 25px;
    height: 25px;
    padding: 3px;
    margin-right: 5px;
}
li {
    opacity: 0;
    animation: new-item-animation 0.3s linear forwards;
}

@keyframes new-item-animation {
    from {
        opacity: 0;
        transform: translateY(-400px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

li.deleted-item {
    animation: removed-item-animation 1s cubic-bezier(0.55, -0.04, 0.91, 0.94)
    forwards;
    transform-origin: 0% 100%;
}

@keyframes removed-item-animation {
    0% {
        opacity: 1;
        transform: rotateZ(0);
    }

    100% {
        opacity: 0;
        transform: translateY(600px) rotateZ(90deg);
    }
}
.toggleMe {
    animation: hideMe 5s forwards;
}
@keyframes hideMe {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}
-------------
const todoValue = document.getElementById("todoText");
const todoAlert = document.getElementById("Alert");
const listItems = document.getElementById("list-items");
const addUpdate = document.getElementById("AddUpdateClick");
let todo = JSON.parse(localStorage.getItem("todo-list"));
if (!todo) {
    todo = [];
}
function CreateToDoItems() {
    if (todoValue.value === "") {
        todoAlert.innerText = "Please enter your todo text!";
        todoValue.focus();
    } else {
        let IsPresent = false;
        todo.forEach((element) => {
            if (element.item == todoValue.value) {
                IsPresent = true;
            }
        });

        if (IsPresent) {
            setAlertMessage("This item already present in the list!");
            return;
        }

        let li = document.createElement("li");
        const todoItems = `<div title="Hit Double Click and Complete" ondblclick="CompletedToDoItems(this)">${todoValue.value}</div><div>
                    <img class="edit todo-controls" onclick="UpdateToDoItems(this)" src="https://www.pngmart.com/files/23/Edit-Icon-PNG-Transparent.png" />
                    <img class="delete todo-controls" onclick="DeleteToDoItems(this)" src="https://www.pngplay.com/wp-content/uploads/7/Delete-Transparent-PNG.png" /></div></div>`;
        li.innerHTML = todoItems;
        listItems.appendChild(li);

        if (!todo) {
            todo = [];
        }
        let itemList = { item: todoValue.value, status: false };
        todo.push(itemList);
        setLocalStorage();
    }
    todoValue.value = "";
    setAlertMessage("Todo item Created Successfully!");
}
function ReadToDoItems() {
    todo.forEach((element) => {
        let li = document.createElement("li");
        let style = "";
        if (element.status) {
            style = "style='text-decoration: line-through'";
        }
        const todoItems = `<div ${style} title="Hit Double Click and Complete" ondblclick="CompletedToDoItems(this)">${
            element.item
        }
    ${
            style === ""
                ? ""
                : '<img class="todo-controls" src="https://www.pngplay.com/wp-content/uploads/7/Delete-Transparent-PNG.png" />'
        }</div><div>
    ${
            style === ""
                ? '<img class="edit todo-controls" onclick="UpdateToDoItems(this)" src="https://www.pngmart.com/files/23/Edit-Icon-PNG-Transparent.png" />'
                : ""
        }
    <img class="delete todo-controls" onclick="DeleteToDoItems(this)" src="https://www.pngplay.com/wp-content/uploads/7/Delete-Transparent-PNG.png" /></div></div>`;
        li.innerHTML = todoItems;
        listItems.appendChild(li);
    });
}
ReadToDoItems();
function UpdateToDoItems(e) {
    if (
        e.parentElement.parentElement.querySelector("div").style.textDecoration ===
        ""
    ) {
        todoValue.value =
            e.parentElement.parentElement.querySelector("div").innerText;
        updateText = e.parentElement.parentElement.querySelector("div");
        addUpdate.setAttribute("onclick", "UpdateOnSelectionItems()");
        addUpdate.setAttribute("src", "https://www.pngmart.com/files/23/Edit-Icon-PNG-Transparent.png");
        todoValue.focus();
    }
}

function UpdateOnSelectionItems() {
    let IsPresent = false;
    todo.forEach((element) => {
        if (element.item == todoValue.value) {
            IsPresent = true;
        }
    });

    if (IsPresent) {
        setAlertMessage("This item already present in the list!");
        return;
    }

    todo.forEach((element) => {
        if (element.item == updateText.innerText.trim()) {
            element.item = todoValue.value;
        }
    });
    setLocalStorage();

    updateText.innerText = todoValue.value;
    addUpdate.setAttribute("onclick", "CreateToDoItems()");
    addUpdate.setAttribute("src", "https://www.pngmart.com/files/23/Edit-Icon-PNG-Transparent.png");
    todoValue.value = "";
    setAlertMessage("Todo item Updated Successfully!");
}
function DeleteToDoItems(e) {
    let deleteValue =
        e.parentElement.parentElement.querySelector("div").innerText;

    if (confirm(`Are you sure. Due you want to delete this ${deleteValue}!`)) {
        e.parentElement.parentElement.setAttribute("class", "deleted-item");
        todoValue.focus();

        todo.forEach((element) => {
            if (element.item == deleteValue.trim()) {
                todo.splice(element, 1);
            }
        });

        setTimeout(() => {
            e.parentElement.parentElement.remove();
        }, 1000);

        setLocalStorage();
    }
}
function CompletedToDoItems(e) {
    if (e.parentElement.querySelector("div").style.textDecoration === "") {
        const img = document.createElement("img");
        img.src = "https://www.pngplay.com/wp-content/uploads/7/Delete-Transparent-PNG.png";
        img.className = "todo-controls";
        e.parentElement.querySelector("div").style.textDecoration = "line-through";
        e.parentElement.querySelector("div").appendChild(img);
        e.parentElement.querySelector("img.edit").remove();

        todo.forEach((element) => {
            if (
                e.parentElement.querySelector("div").innerText.trim() == element.item
            ) {
                element.status = true;
            }
        });
        setLocalStorage();
        setAlertMessage("Todo item Completed Successfully!");
    }
}
function setLocalStorage() {
    localStorage.setItem("todo-list", JSON.stringify(todo));
}
function setAlertMessage(message) {
    todoAlert.removeAttribute("class");
    todoAlert.innerText = message;
    setTimeout(() => {
        todoAlert.classList.add("toggleMe");
    }, 1000);
}
